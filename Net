local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local root = character:WaitForChild("HumanoidRootPart")

local savedCFrame = nil
local VOID_Y = -40
local jumpEnabled = false

-- ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "ProHubUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

-- üåü Th√¥ng b√°o c·∫£m ∆°n
local notify = Instance.new("TextLabel")
notify.Size = UDim2.new(1,0,0,50)
notify.Position = UDim2.new(0,0,0,0)
notify.BackgroundTransparency = 1
notify.Text = "üåü C·∫£m ∆°n ƒë√£ s·ª≠ d·ª•ng üåü"
notify.TextColor3 = Color3.fromRGB(255,255,255)
notify.TextStrokeTransparency = 0.3
notify.Font = Enum.Font.GothamBold
notify.TextScaled = true
notify.Parent = gui
task.delay(3,function() notify:Destroy() end)

-- üåà H√†m rainbow
local function rainbow(uiStroke)
	task.spawn(function()
		while uiStroke.Parent do
			for i = 0,1,0.01 do
				uiStroke.Color = Color3.fromHSV(i,1,1)
				task.wait(0.03)
			end
		end
	end)
end

-- üîò Toggle Menu Button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.fromOffset(120, 40)
toggleBtn.Position = UDim2.new(0.05, 0, 0.2, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(20,20,20)
toggleBtn.Text = "‚â° MENU"
toggleBtn.TextScaled = true
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
toggleBtn.Parent = gui
Instance.new("UICorner", toggleBtn)
local toggleStroke = Instance.new("UIStroke", toggleBtn)
toggleStroke.Thickness = 2
rainbow(toggleStroke)

-- üìÇ Menu ch√≠nh
local frame = Instance.new("Frame")
frame.Size = UDim2.fromOffset(260, 220)
frame.Position = UDim2.new(0.2, 0, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(20,20,20)
frame.Visible = false
frame.Parent = gui
Instance.new("UICorner", frame)
local frameStroke = Instance.new("UIStroke", frame)
frameStroke.Thickness = 3
rainbow(frameStroke)

-- Ti√™u ƒë·ªÅ
local title = Instance.new("TextLabel")
title.Text = "‚ö° Pro Hub ‚ö°"
title.Size = UDim2.fromOffset(200, 40)
title.Position = UDim2.new(0.5, -100, 0, 5)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.Parent = frame

-- Label Speed
local speedLabel = Instance.new("TextLabel")
speedLabel.Text = "Speed: "..humanoid.WalkSpeed
speedLabel.Size = UDim2.fromOffset(200,30)
speedLabel.Position = UDim2.new(0.5,-100,0,50)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.fromRGB(255,255,255)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextScaled = true
speedLabel.Parent = frame

-- ‚ñ≤ Speed Up
local speedUp = Instance.new("TextButton")
speedUp.Text = "‚ñ≤"
speedUp.Size = UDim2.fromOffset(40,30)
speedUp.Position = UDim2.new(0.7,0,0,50)
speedUp.BackgroundColor3 = Color3.fromRGB(30,30,30)
speedUp.TextColor3 = Color3.fromRGB(255,255,255)
speedUp.Font = Enum.Font.GothamBold
speedUp.TextScaled = true
speedUp.Parent = frame
Instance.new("UICorner", speedUp)

-- ‚ñº Speed Down
local speedDown = Instance.new("TextButton")
speedDown.Text = "‚ñº"
speedDown.Size = UDim2.fromOffset(40,30)
speedDown.Position = UDim2.new(0.85,0,0,50)
speedDown.BackgroundColor3 = Color3.fromRGB(30,30,30)
speedDown.TextColor3 = Color3.fromRGB(255,255,255)
speedDown.Font = Enum.Font.GothamBold
speedDown.TextScaled = true
speedDown.Parent = frame
Instance.new("UICorner", speedDown)

-- Jump Toggle
local jumpBtn = Instance.new("TextButton")
jumpBtn.Text = "Jump: OFF"
jumpBtn.Size = UDim2.fromOffset(200,40)
jumpBtn.Position = UDim2.new(0.5,-100,0,100)
jumpBtn.BackgroundColor3 = Color3.fromRGB(30,30,30)
jumpBtn.TextColor3 = Color3.fromRGB(255,255,255)
jumpBtn.Font = Enum.Font.GothamBold
jumpBtn.TextScaled = true
jumpBtn.Parent = frame
Instance.new("UICorner", jumpBtn)

-- Save Position
local saveBtn = Instance.new("TextButton")
saveBtn.Text = "üíæ Save Position"
saveBtn.Size = UDim2.fromOffset(200,40)
saveBtn.Position = UDim2.new(0.5,-100,0,150)
saveBtn.BackgroundColor3 = Color3.fromRGB(30,30,30)
saveBtn.TextColor3 = Color3.fromRGB(255,255,255)
saveBtn.Font = Enum.Font.GothamBold
saveBtn.TextScaled = true
saveBtn.Parent = frame
Instance.new("UICorner", saveBtn)

-- Return Position
local returnBtn = Instance.new("TextButton")
returnBtn.Text = "‚Ü© Return Position"
returnBtn.Size = UDim2.fromOffset(200,40)
returnBtn.Position = UDim2.new(0.5,-100,0,195)
returnBtn.BackgroundColor3 = Color3.fromRGB(30,30,30)
returnBtn.TextColor3 = Color3.fromRGB(255,255,255)
returnBtn.Font = Enum.Font.GothamBold
returnBtn.TextScaled = true
returnBtn.Parent = frame
Instance.new("UICorner", returnBtn)

-- üîÑ Ch·ª©c nƒÉng
speedUp.MouseButton1Click:Connect(function()
	humanoid.WalkSpeed += 5
	speedLabel.Text = "Speed: "..humanoid.WalkSpeed
end)

speedDown.MouseButton1Click:Connect(function()
	humanoid.WalkSpeed = math.max(0, humanoid.WalkSpeed-5)
	speedLabel.Text = "Speed: "..humanoid.WalkSpeed
end)

jumpBtn.MouseButton1Click:Connect(function()
	jumpEnabled = not jumpEnabled
	jumpBtn.Text = jumpEnabled and "Jump: ON" or "Jump: OFF"
end)

saveBtn.MouseButton1Click:Connect(function()
	savedCFrame = root.CFrame
end)

returnBtn.MouseButton1Click:Connect(function()
	if savedCFrame then
		root.CFrame = savedCFrame
	end
end)

-- Anti ch·∫øt r∆°i xu·ªëng void
game:GetService("RunService").Heartbeat:Connect(function()
	if root.Position.Y < VOID_Y and savedCFrame then
		root.CFrame = savedCFrame
	end
	if jumpEnabled then
		humanoid.Jump = true
	end
end)

-- Toggle Menu
local open = false
toggleBtn.MouseButton1Click:Connect(function()
	open = not open
	frame.Visible = open
end)

-- üìå K√©o th·∫£ m∆∞·ª£t m√†
local UserInputService = game:GetService("UserInputService")

local function makeDraggable(ui)
	local dragging, dragStart, startPos

	ui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = ui.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			ui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

makeDraggable(toggleBtn)
makeDraggable(frame)
