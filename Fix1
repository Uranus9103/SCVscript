--// APEX HUB GUI Script

local player = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Name = "ApexHub"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

-- H√†m drag m∆∞·ª£t
local function makeSmoothDraggable(frame)
	local dragging, dragInput, dragStart, startPos
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

-- H√†m rainbow
local function rainbow(stroke)
	task.spawn(function()
		while stroke.Parent do
			for i = 0,1,0.01 do
				stroke.Color = Color3.fromHSV(i,1,1)
				task.wait(0.03)
			end
		end
	end)
end

-- N√∫t MENU (toggle m·ªü/ƒë√≥ng b·∫£ng)
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleMenu"
toggleBtn.Size = UDim2.fromOffset(120, 42)
toggleBtn.Position = UDim2.new(0, 20, 0.75, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(20,20,20)
toggleBtn.Text = "‚â° MENU"
toggleBtn.TextScaled = true
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
toggleBtn.Parent = gui
Instance.new("UICorner", toggleBtn)
local tStroke = Instance.new("UIStroke", toggleBtn)
tStroke.Thickness = 2
rainbow(tStroke)
makeSmoothDraggable(toggleBtn)

-- Khung menu ch√≠nh
local frame = Instance.new("Frame")
frame.Name = "MainPanel"
frame.Size = UDim2.fromOffset(300, 260)
frame.Position = UDim2.new(0, -320, 0.4, 0) -- b·∫Øt ƒë·∫ßu ·∫©n b√™n tr√°i
frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
frame.Visible = false
frame.Parent = gui
Instance.new("UICorner", frame)
local fStroke = Instance.new("UIStroke", frame)
fStroke.Thickness = 3
rainbow(fStroke)
makeSmoothDraggable(frame)

-- Thanh ti√™u ƒë·ªÅ
local topBar = Instance.new("TextLabel")
topBar.Size = UDim2.new(1, -16, 0, 36)
topBar.Position = UDim2.new(0, 8, 0, 6)
topBar.BackgroundColor3 = Color3.fromRGB(22,22,22)
topBar.Text = "‚ö° APEX HUB"
topBar.TextScaled = true
topBar.Font = Enum.Font.GothamBold
topBar.TextColor3 = Color3.fromRGB(255,255,255)
topBar.Parent = frame
Instance.new("UICorner", topBar)
local tbStroke = Instance.new("UIStroke", topBar)
tbStroke.Thickness = 2
rainbow(tbStroke)

-- Hi·ªáu ·ª©ng fade
local uiGradient = Instance.new("UIGradient", frame)
uiGradient.Transparency = NumberSequence.new{
	NumberSequenceKeypoint.new(0,1),
	NumberSequenceKeypoint.new(0.5,0),
	NumberSequenceKeypoint.new(1,1)
}

-- Toggle menu (slide + fade)
local isOpen = false
local closedPos = UDim2.new(0, -320, 0.4, 0)
local openPos = UDim2.new(0, 160, 0.4, 0)

frame.Position = closedPos

local function setOpen(open)
	isOpen = open
	frame.Visible = true
	-- v·ªã tr√≠ tr∆∞·ª£t
	local posGoal = {Position = open and openPos or closedPos}
	TweenService:Create(frame, TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), posGoal):Play()
	-- hi·ªáu ·ª©ng fade
	local fadeGoal = {Transparency = open and NumberSequence.new(0) or NumberSequence.new(1)}
	TweenService:Create(uiGradient, TweenInfo.new(0.35), fadeGoal):Play()
	if not open then
		task.delay(0.4, function()
			if not isOpen then frame.Visible = false end
		end)
	end
end

toggleBtn.MouseButton1Click:Connect(function()
	setOpen(not isOpen)
end)

-- T·∫°o n√∫t ch·ª©c nƒÉng
local function createButton(name, order, callback)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0.9, 0, 0, 40)
	btn.Position = UDim2.new(0.05, 0, 0, 50 + (order-1)*50)
	btn.BackgroundColor3 = Color3.fromRGB(30,30,30)
	btn.Text = name
	btn.TextScaled = true
	btn.Font = Enum.Font.GothamBold
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.Parent = frame
	Instance.new("UICorner", btn)
	local bStroke = Instance.new("UIStroke", btn)
	bStroke.Thickness = 2
	rainbow(bStroke)
	btn.MouseButton1Click:Connect(callback)
end

-- Ch·ª©c nƒÉng Speed
createButton("‚ö° Speed", 1, function()
	player.Character.Humanoid.WalkSpeed = 60
end)

-- Ch·ª©c nƒÉng Jump v√¥ h·∫°n + anti ch·∫øt
createButton("üåÄ Infinite Jump", 2, function()
	UIS.JumpRequest:Connect(function()
		if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
			player.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
		end
	end)
end)

-- Ch·ª©c nƒÉng Save v·ªã tr√≠
local savedPos
createButton("üíæ Save Position", 3, function()
	if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
		savedPos = player.Character.HumanoidRootPart.Position
	end
end)

-- Ch·ª©c nƒÉng Return v·ªã tr√≠
createButton("‚Ü© Return Position", 4, function()
	if savedPos and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
		player.Character.HumanoidRootPart.CFrame = CFrame.new(savedPos + Vector3.new(0,3,0))
	end
end)

-- Anti-void
local voidPart = Instance.new("Part")
voidPart.Anchored = true
voidPart.Size = Vector3.new(1000,1,1000)
voidPart.Position = Vector3.new(0,-5,0)
voidPart.Transparency = 1
voidPart.Parent = workspace

voidPart.Touched:Connect(function(hit)
	local char = hit.Parent
	if char and char:FindFirstChild("HumanoidRootPart") then
		char:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(0, 10, 0)
	end
end)
