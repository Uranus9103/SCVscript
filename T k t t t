local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PushPartGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Size = UDim2.new(0,150,0,50)
button.Position = UDim2.new(1,-160,0,20)
button.Text = "Bật Đẩy"
button.Font = Enum.Font.GothamBold
button.TextSize = 20
button.TextColor3 = Color3.fromRGB(255,255,255)
button.BackgroundColor3 = Color3.fromRGB(0,170,255)
button.AutoButtonColor = true
button.Parent = ScreenGui

local corner = Instance.new("UICorner", button)
corner.CornerRadius = UDim.new(0,12)

-- GUI kéo thả
local dragging, dragStart, startPos = false
button.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = button.Position
	end
end)
button.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		if dragging then
			local delta = input.Position - dragStart
			button.Position = UDim2.new(
				startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y
			)
		end
	end
end)
game:GetService("UserInputService").InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = false
	end
end)

-- Biến
local firstToggle = true
local savedCFrame = nil
local pushing = false

-- Hàm đẩy mượt về vị trí lưu + né vật
local function pushToSaved()
	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")

	local function stepMove()
		local direction = (savedCFrame.Position - hrp.Position)
		local distance = direction.Magnitude
		if distance < 1 then
			pushing = false
			button.Text = "Hoàn thành!"
			return
		end

		local moveDir = direction.Unit * math.min(1, distance) -- di chuyển từng bước nhỏ
		-- Raycast kiểm tra vật cản
		local rayParams = RaycastParams.new()
		rayParams.FilterDescendantsInstances = {char}
		rayParams.FilterType = Enum.RaycastFilterType.Blacklist
		local ray = Workspace:Raycast(hrp.Position, moveDir, rayParams)
		if ray then
			-- Né vật cản: nhích sang phải (simple)
			moveDir = Vector3.new(moveDir.Z, moveDir.Y, -moveDir.X)
		end

		hrp.CFrame = hrp.CFrame + moveDir
		task.defer(stepMove) -- tiếp tục bước kế tiếp
	end

	stepMove()
end

-- Toggle chức năng
local function togglePush()
	local char = player.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	if firstToggle then
		-- Lần đầu bật: reset và lưu vị trí
		savedCFrame = hrp.CFrame
		player:LoadCharacter()
		button.Text = "Đang reset..."
		firstToggle = false
	else
		-- Lần thứ 2: tự đẩy về vị trí đã lưu
		if savedCFrame and not pushing then
			pushing = true
			button.Text = "Đang đẩy về vị trí..."
			pushToSaved()
		end
	end
end

-- Khi respawn, tự set vị trí
player.CharacterAdded:Connect(function(char)
	if savedCFrame then
		local hrp = char:WaitForChild("HumanoidRootPart")
		task.wait(0.2)
		hrp.CFrame = savedCFrame
		if not pushing then
			button.Text = "Sẵn sàng để đẩy"
		end
	end
end)

button.MouseButton1Click:Connect(togglePush)
